{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","pros","style","overflowY","border","height","children","App","useState","setRobots","setSearchfield","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+OAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,yBAAKC,UAAU,uDACb,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACI,4BAAKF,GACL,2BAAIC,MCgBHK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCG9BW,EAdG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,yBAAKX,UAAU,OACX,2BACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCIPI,EAXA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAAEC,UAAW,SACvBC,OAAQ,kBACRC,OAAQ,UACLJ,EAAKK,W,MC8CHC,MA5Cf,WAQI,MAA4BC,mBAAS,IAArC,mBAAOnB,EAAP,KAAeoB,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOb,EAAP,KAAoBe,EAApB,KAOAC,qBAAU,WACNC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAUP,EAAUO,QAC7B,IAMHC,QAAQC,IAAI7B,EAAQM,GAEpB,IAAMwB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS5B,EAAY2B,kBAEzD,OAAQjC,EAAOmC,OAEV,yBAAKvC,UAAU,MACZ,wBAAIA,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAWW,aAZI,SAAC6B,GACpBf,EAAee,EAAMC,OAAOC,UAYxB,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUtC,OAAQ8B,MAL1B,wCC7BOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.ad065fd9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n          <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n          <div>\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n        </div>\r\n    )\r\n \r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default CardList;\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n             />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (pros) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll' \r\n        , border: '3px solid black'\r\n        , height: '800px'}}>\r\n            {pros.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll","import React, {  useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    // constructor() {\r\n    //     super()\r\n    //     this.state = {\r\n    //         robots: [],\r\n    //         searchfield: ''\r\n    //     }\r\n    // }\r\n    const [robots, setRobots] = useState([]);\r\n    const [searchfield, setSearchfield] = useState('');\r\n\r\n    // componentDidMount() {\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //       .then(response=> response.json())\r\n    //       .then(users => this.setState({robots:users}));\r\n    // }\r\n    useEffect(()=> {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n          .then(response=> response.json())\r\n          .then(users => {setRobots(users)});\r\n    }, [])\r\n\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchfield(event.target.value)\r\n    }\r\n    console.log(robots, searchfield);\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return !robots.length ?\r\n        <h1>loading</h1> :\r\n        (<div className='tc'>\r\n            <h1 className='f2'>RobotFriends</h1>\r\n            <SearchBox searchChange={onSearchChange} />\r\n            <Scroll>\r\n                <CardList robots={filteredRobots} />\r\n            </Scroll>\r\n        </div>\r\n        );\r\n}\r\n\r\n  \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}